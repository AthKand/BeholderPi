---
- hosts: new_eyes
  remote_user: pi
  become: true
  tasks:
    - name: Update all installed apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Install basic packages
      apt:
        pkg:
          - vim
          - ntp
          - git
          - htop
          - byobu
          - python3-pip
          - python3-picamera
          - python3-zmq
          - python3-apt
          - python-setuptools  # workaround for ansible checking setuptools of the wrong python version!
          - libzbar0
        state: present

    - name: Install pip packages
      pip:
        name:
          - pyyaml
          - pyzbar
          - Pillow
        executable: pip3

    - name: Enable the raspberry camera
      become: true
      lineinfile:
        path: /boot/config.txt
        regexp: '^start_x'
        line: 'start_x=1'
      register: reboot_required

    - name: "Clone BeholderPi GitHub repository"
      git:
        repo: https://github.com/MemDynLab/BeholderPi
        dest: /home/pi/src/BeholderPi
        update: yes
      register: service_restart

    - name: Create symbolic link
      file:
        src: "/home/pi/src/BeholderPi/scripts/services/streaming/beholder_streaming.service"
        dest: "/etc/systemd/system/beholder_streaming.service"
        state: link

    - name: Enable streaming service
      systemd:
        name: beholder_streaming
        enabled: yes
      register: reboot_required

    # See https://raspberrypi.stackexchange.com/q/84390/6506
    - name: Disable swap file
      shell: >
        dphys-swapfile swapoff &&
        dphys-swapfile uninstall &&
        update-rc.d -f dphys-swapfile remove
      when:
        - ansible_swaptotal_mb > 0

    - name: "Reload Systemd config"
      systemd:
        daemon-reload: yes
      when: service_restart

    - name: Populate service facts
      service_facts:
#      - debug:
#        var: ansible_facts.services

    - name: "Restart discovery service"
      systemd:
        name: beholder_discovery_sender
        state: restarted
        no_block: yes
      when: service_restart
      changed_when: False

    - name: "Restart streaming service"
      systemd:
        name: beholder_streaming
        state: restarted
        no_block: yes
      when: "'beholder_streaming.service' in services"
      changed_when: False

    - name: Check if telegraf is running
      systemd:
        name: telegraf
        state: started
      register: telegraf_install_required
      ignore_errors: True

    - name: Install InfluxDB repository key
      apt_key:
        url: https://repos.influxdata.com/influxdb.key
        state: present
      when: telegraf_install_required

    - name: Add InfluxDB repository deb
      apt_repository:
        repo: deb https://repos.influxdata.com/debian stretch stable
        state: present
      when: telegraf_install_required

    - name: Install telegraf
      apt:
        pkg: telegraf
        state: present
      when: telegraf_install_required

    - name: Adding telegraf user to video group
      user:
        name: telegraf
        groups: video
        append: yes

    - name: Check for telegraf.conf symbolic link status
      stat: path=/etc/telegraf/telegraf.conf
      register: telegraf_conf_link
#      - debug: msg="Link exists"
#      when: telegraf_conf_link.stat.islnk is defined and telegraf_conf_link.stat.islnk

    - name: Move exising telegraf configuration file
      command: mv /etc/telegraf/telegraf.conf /etc/telegraf/telegraf.bak
      when: telegraf_conf_link.stat.islnk is defined and not telegraf_conf_link.stat.islnk

    - name: Create symbolic link
      file:
        src: "/home/pi/src/BeholderPi/piEye/resources/telegraf.conf"
        dest: "/etc/telegraf/telegraf.conf"
        state: link

    - name: Set up influxdb credentials
      template:
        src: "templates/{{ item.template }}"
        dest: "{{ item.dest }}"
        mode: 0644
      with_items:
        - { template: default.telegraf.j2, dest: /etc/default/telegraf }

    - name: Restart telegraf
      systemd:
        name: telegraf
        state: restarted

    - name: Reboot immediately if there was a change
      shell: "sleep 3 && reboot"
      async: 1
      poll: 0
      when: reboot_required is changed


    - name: Wait for the reboot to complete if there was a change
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
      when: reboot_required is changed


#  #  roles:
#  #  - update
#  #  - eye
#  #  - telegrafer
